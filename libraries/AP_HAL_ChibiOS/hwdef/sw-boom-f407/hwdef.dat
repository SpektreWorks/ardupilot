# hw definition file for sw-spar-f405
# built around STM32F407VET6

# MCU class and specific type
MCU STM32F4xx STM32F407xx

# bootloader starts firmware at 64k
FLASH_RESERVE_START_KB 64
FLASH_SIZE_KB 512

# store parameters in pages 2 and 3
STORAGE_FLASH_PAGE 2
define HAL_STORAGE_SIZE 15360

# board ID for firmware load
APJ_BOARD_ID 8125

env AP_PERIPH 1

define STM32_ST_USE_TIMER 5
define CH_CFG_ST_RESOLUTION 32

# crystal frequency
OSCILLATOR_HZ 8000000

#STDOUT_SERIAL SD1
#STDOUT_BAUDRATE 57600

# activity led
PC8 LED OUTPUT LOW
define HAL_LED_ON 1

define HAL_NO_GPIO_IRQ
define SERIAL_BUFFERS_SIZE 512
define PORT_INT_REQUIRED_STACK 64

# debug (disabled to allow for PA14 LED above), to enable debugging disable the use of PA14 above
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# avoid timer and RCIN threads to save memory
define HAL_NO_RCIN_THREAD

#define HAL_USE_RTC FALSE
#define DISABLE_SERIAL_ESC_COMM TRUE
#
#define DMA_RESERVE_SIZE 0

define HAL_DISABLE_LOOP_DELAY

define HAL_NO_MONITOR_THREAD

define HAL_DEVICE_THREAD_STACK 768

# we setup a small defaults.parm
define AP_PARAM_MAX_EMBEDDED_PARAM 256

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True

# ---------------------- CAN bus -------------------------
PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1
PD5 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW

PB5 CAN2_RX CAN2
PB6 CAN2_TX CAN2
PC14 GPIO_CAN2_SILENT OUTPUT PUSHPULL SPEED_LOW LOW


HAL_CAN_DEFAULT_NODE_ID 73

# use DNA for node allocation

define CAN_APP_NODE_NAME "com.sw.spar"


# ---------------------- UARTs ---------------------------
#           | nav light | esc front  | esc rear | transponder |
SERIAL_ORDER USART6 USART2 USART3 UART4

# USART6 nav light
PC6  USART6_TX USART6 SPEED_HIGH NODMA

# USART2 front esc
PD6 USART2_RX USART2 SPEED_HIGH NODMA

# USART3 rear esc
PD9  USART3_RX USART3 SPEED_HIGH NODMA

# USART4 transponder
PA0 UART4_TX UART4 SPEED_HIGH NODMA
PA1 UART4_RX UART4 SPEED_HIGH NODMA

# --------------------- PWM -----------------------
PE9   TIM1_CH1  TIM1 PWM(1) GPIO(51)
PE11  TIM1_CH2  TIM1 PWM(2) GPIO(52)
PB10  TIM2_CH3  TIM2 PWM(3) GPIO(53)
PB11  TIM2_CH4  TIM2 PWM(4) GPIO(54)

# ====================== GPIO ------------------
PA5  SAGETECH_MAINT OUTPUT GPIO(0)
PB3  POWER_GOOD2    INPUT  GPIO(1)
PD7  POWER_GOOD1    INPUT  GPIO(2)
PD15 CHARGER_EN     OUTPUT GPIO(3)
PE4  ID_PIN         INPUT  GPIO(4)


# ----------------------- GPS ----------------------------
define HAL_PERIPH_ENABLE_GPS
define GPS_MAX_RATE_MS 200

define GPS_MAX_RECEIVERS 1
define GPS_MAX_INSTANCES 1


# disable rangefinder by default
define AP_PERIPH_RANGEFINDER_PORT_DEFAULT 1

# ------------------ BATTERY Monitor -----------------------
define HAL_PERIPH_ENABLE_BATTERY

define HAL_USE_ADC TRUE
define STM32_ADC_USE_ADC1 TRUE

# -------------------- EFI Support -------------------------
# support all serial EFI types    
define HAL_PERIPH_ENABLE_EFI    
define HAL_EFI_ENABLED 1 
define AP_PERIPH_EFI_PORT_DEFAULT 1

# battery monitors
define HAL_PERIPH_ENABLE_BATTERY
define HAL_USE_ADC TRUE
define STM32_ADC_USE_ADC1 TRUE   
define AP_BATT_MONITOR_MAX_INSTANCES 3

# vtol voltage
PA2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
# vtol current
PA3 BATT_VOLTAGE_SENS ADC1 SCALE(1)
# servo voltage
PA4 BATT_VOLTAGE_SENS ADC1 SCALE(1)
# 5V voltage
PA6 BATT2_VOLTAGE_SENS ADC1 SCALE(1)
# 28V voltage
PB1 BATT3_VOLTAGE_SENS ADC1 SCALE(1)
# 5v backup voltage
PC0 BATT3_VOLTAGE_SENS ADC1 SCALE(1)
# 5v primary
PC2 BATT3_VOLTAGE_SENS ADC1 SCALE(1)
# battery temperature
PC4 BATT3_VOLTAGE_SENS ADC1 SCALE(1)
#
## Set the Default Battery Monitor Type to be Off
#define HAL_BATT_MONITOR_DEFAULT 0
#
#define HAL_BATT_VOLT_PIN 10
#define HAL_BATT_VOLT_SCALE 21.0
#
#define HAL_BATT_CURR_PIN 11
#define HAL_BATT_CURR_SCALE 40.0
#
#define HAL_BATT2_VOLT_PIN 15
#define HAL_BATT2_VOLT_SCALE 11.0
#
#define HAL_PERIPH_ENABLE_RC_OUT
